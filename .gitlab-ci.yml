# The stages available in the pipeline.
stages:
  - latest-build
  - release

# Global Variables
variables:
  # Ensures overlay2 fs is used.
  DOCKER_DRIVER: overlay2
  # The image to use for the app builder.
  APP_BUILDER_IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/app-builder"
  # The image to use for the app.
  APP_IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/app"
  # The image to use for the storybook builder.
  STORYBOOK_BUILDER_IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/storybook-builder"
  # The image to use for the storybook.
  STORYBOOK_IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/storybook"
  # The image for the master app.
  MASTER_APP: "$CI_REGISTRY_IMAGE/master/app"
  # The image for the develop app.
  DEVELOP_APP: "$CI_REGISTRY_IMAGE/develop/app"

# The default options for any defined job.
default:
  image: gitlab.zengenti.com:4567/ops/zengenti-dind:latest
  # If your job doesn't need any services, you can add "services: []" to your job.
  # If your job uses a different service, that will override the default docker:dind service.
  # If you job uses docker:dind *and* and additional service, be sure to include docker:dind as a service on your job.
  services:
    - docker:dind

# Anchor for writing a version.json file
.write-version-info: &write-version-info
  - 'echo
    ''{
    "commitRef":"$CI_COMMIT_SHA",
    "pipelineIID":"$CI_PIPELINE_IID",
    "pipelineUrl":"$CI_PIPELINE_URL",
    "buildNo":"$CI_PIPELINE_ID",
    "branchName":"$CI_COMMIT_REF_NAME",
    "registryImage":"$CI_REGISTRY_IMAGE"
    }'' > version.json'

# Anchor for building a Dockerfile and tagging it as latest
.docker-build-latest: &docker-build-latest
  - docker pull $BUILDER_IMAGE:latest || true
  - docker build --force-rm --cache-from $BUILDER_IMAGE:latest -t $BUILDER_IMAGE:latest -f docker/${BUILDER_DOCKERFILE}.DockerFile .
  - docker push $BUILDER_IMAGE:latest
  - docker pull $BUILD_IMAGE:latest || true
  - docker build --force-rm --cache-from $BUILD_IMAGE:latest -t $BUILD_IMAGE:latest --build-arg builder_image=$BUILDER_IMAGE:latest -f docker/${DOCKERFILE}.DockerFile .
  - docker push $BUILD_IMAGE:latest

# Anchor for re-tagging an image as release
.docker-release-tag: &docker-release-tag
  - docker pull "$BUILD_APP:latest"
  - docker tag "$BUILD_APP:latest" "$BUILD_APP:release"
  - docker push "$BUILD_APP:release"

# Anchor for re-tagging an image with the git tag
.docker-commit-tag: &docker-commit-tag
  - docker tag "$BUILD_APP:latest" "$BUILD_APP:$CI_COMMIT_TAG"
  - docker push "$BUILD_APP:$CI_COMMIT_TAG"

# Builds the App Image
build-latest-code:
  stage: latest-build
  except:
    - tags
  variables:
    BUILD_IMAGE: "$APP_IMAGE"
    BUILDER_IMAGE: "$APP_BUILDER_IMAGE"
    DOCKERFILE: "ci-build"
    BUILDER_DOCKERFILE: "nodebuilder"
  script:
    - *write-version-info
    - *docker-build-latest
  environment:
    name: latest
    url: http://dev.preview.$CI_PROJECT_NAME.contensis.cloud

# Builds the Storybook Image
build-storybook:
  stage: latest-build
  except:
    - tags
  variables:
    BUILD_IMAGE: "$STORYBOOK_IMAGE"
    BUILDER_IMAGE: "$STORYBOOK_BUILDER_IMAGE"
    DOCKERFILE: "storybook-http"
    BUILDER_DOCKERFILE: "storybook-builder"
  script:
    - *docker-build-latest
  environment:
    name: storybook
    url: http://storybook.latest.$CI_PROJECT_NAME.contensis.cloud

# Releases the master app image to production
build-live-code-for-production:
  stage: release
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^release-.*$/
  except:
    - branches
  variables:
    BUILD_APP: "$MASTER_APP"
  script:
    - *docker-release-tag
    - *docker-commit-tag


  environment:
    name: live
    url: http://preview.$CI_PROJECT_NAME.contensis.cloud

# Releases the develop app image to development
build-live-code-for-development:
  stage: release
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^devrelease-.*$/
  variables:
    BUILD_APP: "$DEVELOP_APP"
  script:
    - *docker-release-tag
  environment:
    name: live
    url: http://preview.$CI_PROJECT_NAME.contensis.cloud
