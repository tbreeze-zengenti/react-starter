image: gitlab.zengenti.com:4567/ops/zengenti-dind:latest

include:
  - 'https://gitlab.zengenti.com/ops/contensis-ci/-/raw/main/push-block.yml'

stages:
  - latest-build
  - live-build
#  - storybook-latest-build // uncomment if using Storybook with Blocks
  - push-block
  - release-block

variables:
  DOCKER_DRIVER: overlay2
  STORYBOOK: ''
  APP_BUILDER_IMAGE: '$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/app-builder'
  APP_IMAGE: '$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/app'
  STORYBOOK_BUILDER_IMAGE: '$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/storybook-builder'
  STORYBOOK_IMAGE: '$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/storybook'
  MASTER_APP: '$CI_REGISTRY_IMAGE/master/app'
  DEVELOP_APP: '$CI_REGISTRY_IMAGE/develop/app'

services:
  - docker:dind

build-latest-code:
  stage: latest-build
  except:
    - tags
  script:
    - docker pull $APP_BUILDER_IMAGE:latest || true
    - echo "{\"commitRef\":\"$CI_COMMIT_SHA\",\"pipelineIID\":\"$CI_PIPELINE_IID\",\"pipelineUrl\":\"$CI_PIPELINE_URL\",\"buildNo\":\"$CI_PIPELINE_ID\",\"branchName\":\"$CI_COMMIT_REF_NAME\",\"registryImage\":\"$CI_REGISTRY_IMAGE\"}" > version.json
    - docker build --force-rm --cache-from $APP_BUILDER_IMAGE:latest -t $APP_BUILDER_IMAGE:latest -f docker/nodebuilder.DockerFile .
    - docker push $APP_BUILDER_IMAGE:latest
    - docker pull $APP_IMAGE:latest || true
    - docker build --force-rm --cache-from $APP_IMAGE:latest -t $APP_IMAGE:latest --build-arg builder_image=$APP_BUILDER_IMAGE:latest -f docker/ci-build.DockerFile .
    - docker push $APP_IMAGE:latest
    - docker tag "$APP_IMAGE:latest" "$APP_IMAGE:build-$CI_PIPELINE_IID"
    - docker push "$APP_IMAGE:build-$CI_PIPELINE_IID"

#build-storybook:
#  stage: storybook-latest-build
#  except:
#    - tags
#  script:
#    - docker pull $STORYBOOK_BUILDER_IMAGE:latest || true
#    - docker build --compress --force-rm --cache-from $STORYBOOK_BUILDER_IMAGE:latest -t $STORYBOOK_BUILDER_IMAGE:latest -f docker/storybook-builder.DockerFile .
#    - docker push $STORYBOOK_BUILDER_IMAGE:latest
#    - docker build --compress --force-rm -t $STORYBOOK_IMAGE:latest --build-arg builder_image=$STORYBOOK_BUILDER_IMAGE:latest -f  docker/storybook-http.DockerFile .
#    - docker push $STORYBOOK_IMAGE:latest
#    - docker tag "$STORYBOOK_IMAGE:latest" "$STORYBOOK_IMAGE:build-$CI_PIPELINE_IID"
#    - docker push "$STORYBOOK_IMAGE:build-$CI_PIPELINE_IID"

build-live-code-for-production:
  stage: live-build
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^release-.*$/
  except:
    - branches
  script:
    - docker pull "$MASTER_APP:latest"
    - docker tag "$MASTER_APP:latest" "$MASTER_APP:release"
    - docker push "$MASTER_APP:release"
    - docker tag "$MASTER_APP:latest" "$MASTER_APP:$CI_COMMIT_TAG"
    - docker push "$MASTER_APP:$CI_COMMIT_TAG"

push-to-contensis:
  stage: push-block
  variables:
    alias: develop
    project_id: chalky1056Pickers
    block_id: react-starter
    image_uri: $APP_IMAGE:build-$CI_PIPELINE_IID
    release: 'true' # Whether to release the block upon successful push
    client_id: 72e26b36-05a3-47ec-9974-04ce61c9ed5d
    shared_secret: 9377f848a4aa43318776b5d754e1aa2e-51ab50c5e11940f181ce2537a0c54350-668dc2785e794253bbda1ae4b778deca

#push-storybook-block:
#  extends: push-to-contensis
#  stage: push-block
#  variables:
#    block_id: react-starter-storybook
#    image_uri: $STORYBOOK_IMAGE:build-$CI_PIPELINE_IID
#    release: 'false' # Whether to release the block upon successful push
